/**
 * Copyright (C) 2016 Nigel Williams
 *
 * Vulkan Free Surface Modeling Engine (VFSME) is free software:
 * you can redistribute it and/or modify it under the terms of the
 * GNU Lesser General Public License as published by
 * the Free Software Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

layout (binding = 0) uniform UBO 
{
	float time;
	float dx;
	float k;
	float omega;
	float amplitude;
} ubo;

layout(std430, binding = 1) buffer Height 
{
   float height[];
};

layout(std140, binding = 2) buffer Normal 
{
   vec4 normal[];
};

layout (local_size_x = 32, local_size_y = 32) in;

void main() 
{
    // Current SSBO index
    //uint index = gl_LocalInvocationID.x;
	uint index = gl_LocalInvocationIndex;
	//uint index = gl_GlobalInvocationID.x + gl_GlobalInvocationID.y * gl_NumWorkGroups.x * gl_WorkGroupSize.x;

	float kx = ubo.k * gl_LocalInvocationID.x * ubo.dx;
	
    height[index] = ubo.amplitude*sin(kx - ubo.omega*ubo.time);
	
	normal[index].x = -ubo.amplitude*cos(kx - ubo.omega*ubo.time);
	normal[index].y = 1.0;
	normal[index].z = 0.0;
	normal[index].w = 1.0;
}